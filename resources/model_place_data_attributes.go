/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PlaceDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaceDataAttributes{}

// PlaceDataAttributes struct for PlaceDataAttributes
type PlaceDataAttributes struct {
	// city id
	CityId string `json:"city_id"`
	// distributor id
	DistributorId *string `json:"distributor_id,omitempty"`
	// place class
	Class string `json:"class"`
	// place status
	Status string `json:"status"`
	// is place verified
	Verified bool `json:"verified"`
	// place ownership
	Ownership string `json:"ownership"`
	Point Point `json:"point"`
	// place name
	Name string `json:"name"`
	// place address
	Address string `json:"address"`
	// place description
	Description string `json:"description"`
	// place website
	Website *string `json:"website,omitempty"`
	// place phone number
	Phone *string `json:"phone,omitempty"`
	// place creation date
	CreatedAt time.Time `json:"created_at"`
	// place last update date
	UpdatedAt time.Time `json:"updated_at"`
}

type _PlaceDataAttributes PlaceDataAttributes

// NewPlaceDataAttributes instantiates a new PlaceDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceDataAttributes(cityId string, class string, status string, verified bool, ownership string, point Point, name string, address string, description string, createdAt time.Time, updatedAt time.Time) *PlaceDataAttributes {
	this := PlaceDataAttributes{}
	this.CityId = cityId
	this.Class = class
	this.Status = status
	this.Verified = verified
	this.Ownership = ownership
	this.Point = point
	this.Name = name
	this.Address = address
	this.Description = description
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewPlaceDataAttributesWithDefaults instantiates a new PlaceDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceDataAttributesWithDefaults() *PlaceDataAttributes {
	this := PlaceDataAttributes{}
	return &this
}

// GetCityId returns the CityId field value
func (o *PlaceDataAttributes) GetCityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CityId
}

// GetCityIdOk returns a tuple with the CityId field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CityId, true
}

// SetCityId sets field value
func (o *PlaceDataAttributes) SetCityId(v string) {
	o.CityId = v
}

// GetDistributorId returns the DistributorId field value if set, zero value otherwise.
func (o *PlaceDataAttributes) GetDistributorId() string {
	if o == nil || IsNil(o.DistributorId) {
		var ret string
		return ret
	}
	return *o.DistributorId
}

// GetDistributorIdOk returns a tuple with the DistributorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetDistributorIdOk() (*string, bool) {
	if o == nil || IsNil(o.DistributorId) {
		return nil, false
	}
	return o.DistributorId, true
}

// HasDistributorId returns a boolean if a field has been set.
func (o *PlaceDataAttributes) HasDistributorId() bool {
	if o != nil && !IsNil(o.DistributorId) {
		return true
	}

	return false
}

// SetDistributorId gets a reference to the given string and assigns it to the DistributorId field.
func (o *PlaceDataAttributes) SetDistributorId(v string) {
	o.DistributorId = &v
}

// GetClass returns the Class field value
func (o *PlaceDataAttributes) GetClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *PlaceDataAttributes) SetClass(v string) {
	o.Class = v
}

// GetStatus returns the Status field value
func (o *PlaceDataAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PlaceDataAttributes) SetStatus(v string) {
	o.Status = v
}

// GetVerified returns the Verified field value
func (o *PlaceDataAttributes) GetVerified() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetVerifiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verified, true
}

// SetVerified sets field value
func (o *PlaceDataAttributes) SetVerified(v bool) {
	o.Verified = v
}

// GetOwnership returns the Ownership field value
func (o *PlaceDataAttributes) GetOwnership() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ownership
}

// GetOwnershipOk returns a tuple with the Ownership field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetOwnershipOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ownership, true
}

// SetOwnership sets field value
func (o *PlaceDataAttributes) SetOwnership(v string) {
	o.Ownership = v
}

// GetPoint returns the Point field value
func (o *PlaceDataAttributes) GetPoint() Point {
	if o == nil {
		var ret Point
		return ret
	}

	return o.Point
}

// GetPointOk returns a tuple with the Point field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetPointOk() (*Point, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Point, true
}

// SetPoint sets field value
func (o *PlaceDataAttributes) SetPoint(v Point) {
	o.Point = v
}

// GetName returns the Name field value
func (o *PlaceDataAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PlaceDataAttributes) SetName(v string) {
	o.Name = v
}

// GetAddress returns the Address field value
func (o *PlaceDataAttributes) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *PlaceDataAttributes) SetAddress(v string) {
	o.Address = v
}

// GetDescription returns the Description field value
func (o *PlaceDataAttributes) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PlaceDataAttributes) SetDescription(v string) {
	o.Description = v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *PlaceDataAttributes) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *PlaceDataAttributes) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *PlaceDataAttributes) SetWebsite(v string) {
	o.Website = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *PlaceDataAttributes) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *PlaceDataAttributes) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *PlaceDataAttributes) SetPhone(v string) {
	o.Phone = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PlaceDataAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PlaceDataAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PlaceDataAttributes) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PlaceDataAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PlaceDataAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o PlaceDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaceDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["city_id"] = o.CityId
	if !IsNil(o.DistributorId) {
		toSerialize["distributor_id"] = o.DistributorId
	}
	toSerialize["class"] = o.Class
	toSerialize["status"] = o.Status
	toSerialize["verified"] = o.Verified
	toSerialize["ownership"] = o.Ownership
	toSerialize["point"] = o.Point
	toSerialize["name"] = o.Name
	toSerialize["address"] = o.Address
	toSerialize["description"] = o.Description
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *PlaceDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"city_id",
		"class",
		"status",
		"verified",
		"ownership",
		"point",
		"name",
		"address",
		"description",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPlaceDataAttributes := _PlaceDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPlaceDataAttributes)

	if err != nil {
		return err
	}

	*o = PlaceDataAttributes(varPlaceDataAttributes)

	return err
}

type NullablePlaceDataAttributes struct {
	value *PlaceDataAttributes
	isSet bool
}

func (v NullablePlaceDataAttributes) Get() *PlaceDataAttributes {
	return v.value
}

func (v *NullablePlaceDataAttributes) Set(val *PlaceDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceDataAttributes(val *PlaceDataAttributes) *NullablePlaceDataAttributes {
	return &NullablePlaceDataAttributes{value: val, isSet: true}
}

func (v NullablePlaceDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


