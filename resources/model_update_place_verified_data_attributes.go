/*
Place Service API

API for managing places and their classes.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdatePlaceVerifiedDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePlaceVerifiedDataAttributes{}

// UpdatePlaceVerifiedDataAttributes struct for UpdatePlaceVerifiedDataAttributes
type UpdatePlaceVerifiedDataAttributes struct {
	// place verification status
	Verified bool `json:"verified"`
}

type _UpdatePlaceVerifiedDataAttributes UpdatePlaceVerifiedDataAttributes

// NewUpdatePlaceVerifiedDataAttributes instantiates a new UpdatePlaceVerifiedDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePlaceVerifiedDataAttributes(verified bool) *UpdatePlaceVerifiedDataAttributes {
	this := UpdatePlaceVerifiedDataAttributes{}
	this.Verified = verified
	return &this
}

// NewUpdatePlaceVerifiedDataAttributesWithDefaults instantiates a new UpdatePlaceVerifiedDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePlaceVerifiedDataAttributesWithDefaults() *UpdatePlaceVerifiedDataAttributes {
	this := UpdatePlaceVerifiedDataAttributes{}
	return &this
}

// GetVerified returns the Verified field value
func (o *UpdatePlaceVerifiedDataAttributes) GetVerified() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value
// and a boolean to check if the value has been set.
func (o *UpdatePlaceVerifiedDataAttributes) GetVerifiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verified, true
}

// SetVerified sets field value
func (o *UpdatePlaceVerifiedDataAttributes) SetVerified(v bool) {
	o.Verified = v
}

func (o UpdatePlaceVerifiedDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePlaceVerifiedDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["verified"] = o.Verified
	return toSerialize, nil
}

func (o *UpdatePlaceVerifiedDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"verified",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdatePlaceVerifiedDataAttributes := _UpdatePlaceVerifiedDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdatePlaceVerifiedDataAttributes)

	if err != nil {
		return err
	}

	*o = UpdatePlaceVerifiedDataAttributes(varUpdatePlaceVerifiedDataAttributes)

	return err
}

type NullableUpdatePlaceVerifiedDataAttributes struct {
	value *UpdatePlaceVerifiedDataAttributes
	isSet bool
}

func (v NullableUpdatePlaceVerifiedDataAttributes) Get() *UpdatePlaceVerifiedDataAttributes {
	return v.value
}

func (v *NullableUpdatePlaceVerifiedDataAttributes) Set(val *UpdatePlaceVerifiedDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePlaceVerifiedDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePlaceVerifiedDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePlaceVerifiedDataAttributes(val *UpdatePlaceVerifiedDataAttributes) *NullableUpdatePlaceVerifiedDataAttributes {
	return &NullableUpdatePlaceVerifiedDataAttributes{value: val, isSet: true}
}

func (v NullableUpdatePlaceVerifiedDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePlaceVerifiedDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


