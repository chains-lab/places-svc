/*
Cifra SSO REST API

SSO REST API for Cifra domain

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// checks if the UpdateClassDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateClassDataAttributes{}

// UpdateClassDataAttributes struct for UpdateClassDataAttributes
type UpdateClassDataAttributes struct {
	// class icon
	Icon *string `json:"icon,omitempty"`
	// class name at english
	Name *string `json:"name,omitempty"`
	// parent class code
	Parent *string `json:"parent,omitempty"`
}

// NewUpdateClassDataAttributes instantiates a new UpdateClassDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateClassDataAttributes() *UpdateClassDataAttributes {
	this := UpdateClassDataAttributes{}
	var name string = "New Class"
	this.Name = &name
	return &this
}

// NewUpdateClassDataAttributesWithDefaults instantiates a new UpdateClassDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateClassDataAttributesWithDefaults() *UpdateClassDataAttributes {
	this := UpdateClassDataAttributes{}
	var name string = "New Class"
	this.Name = &name
	return &this
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *UpdateClassDataAttributes) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClassDataAttributes) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *UpdateClassDataAttributes) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *UpdateClassDataAttributes) SetIcon(v string) {
	o.Icon = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateClassDataAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClassDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateClassDataAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateClassDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *UpdateClassDataAttributes) GetParent() string {
	if o == nil || IsNil(o.Parent) {
		var ret string
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClassDataAttributes) GetParentOk() (*string, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *UpdateClassDataAttributes) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given string and assigns it to the Parent field.
func (o *UpdateClassDataAttributes) SetParent(v string) {
	o.Parent = &v
}

func (o UpdateClassDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateClassDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	return toSerialize, nil
}

type NullableUpdateClassDataAttributes struct {
	value *UpdateClassDataAttributes
	isSet bool
}

func (v NullableUpdateClassDataAttributes) Get() *UpdateClassDataAttributes {
	return v.value
}

func (v *NullableUpdateClassDataAttributes) Set(val *UpdateClassDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateClassDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateClassDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateClassDataAttributes(val *UpdateClassDataAttributes) *NullableUpdateClassDataAttributes {
	return &NullableUpdateClassDataAttributes{value: val, isSet: true}
}

func (v NullableUpdateClassDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateClassDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


