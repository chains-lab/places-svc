/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreatePlaceDataAttributesPoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePlaceDataAttributesPoint{}

// CreatePlaceDataAttributesPoint struct for CreatePlaceDataAttributesPoint
type CreatePlaceDataAttributesPoint struct {
	// Longitude
	Lon float32 `json:"lon"`
	// Latitude
	Lat float32 `json:"lat"`
}

type _CreatePlaceDataAttributesPoint CreatePlaceDataAttributesPoint

// NewCreatePlaceDataAttributesPoint instantiates a new CreatePlaceDataAttributesPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePlaceDataAttributesPoint(lon float32, lat float32) *CreatePlaceDataAttributesPoint {
	this := CreatePlaceDataAttributesPoint{}
	this.Lon = lon
	this.Lat = lat
	return &this
}

// NewCreatePlaceDataAttributesPointWithDefaults instantiates a new CreatePlaceDataAttributesPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePlaceDataAttributesPointWithDefaults() *CreatePlaceDataAttributesPoint {
	this := CreatePlaceDataAttributesPoint{}
	return &this
}

// GetLon returns the Lon field value
func (o *CreatePlaceDataAttributesPoint) GetLon() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Lon
}

// GetLonOk returns a tuple with the Lon field value
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributesPoint) GetLonOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lon, true
}

// SetLon sets field value
func (o *CreatePlaceDataAttributesPoint) SetLon(v float32) {
	o.Lon = v
}

// GetLat returns the Lat field value
func (o *CreatePlaceDataAttributesPoint) GetLat() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Lat
}

// GetLatOk returns a tuple with the Lat field value
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributesPoint) GetLatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lat, true
}

// SetLat sets field value
func (o *CreatePlaceDataAttributesPoint) SetLat(v float32) {
	o.Lat = v
}

func (o CreatePlaceDataAttributesPoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePlaceDataAttributesPoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lon"] = o.Lon
	toSerialize["lat"] = o.Lat
	return toSerialize, nil
}

func (o *CreatePlaceDataAttributesPoint) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lon",
		"lat",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatePlaceDataAttributesPoint := _CreatePlaceDataAttributesPoint{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreatePlaceDataAttributesPoint)

	if err != nil {
		return err
	}

	*o = CreatePlaceDataAttributesPoint(varCreatePlaceDataAttributesPoint)

	return err
}

type NullableCreatePlaceDataAttributesPoint struct {
	value *CreatePlaceDataAttributesPoint
	isSet bool
}

func (v NullableCreatePlaceDataAttributesPoint) Get() *CreatePlaceDataAttributesPoint {
	return v.value
}

func (v *NullableCreatePlaceDataAttributesPoint) Set(val *CreatePlaceDataAttributesPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePlaceDataAttributesPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePlaceDataAttributesPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePlaceDataAttributesPoint(val *CreatePlaceDataAttributesPoint) *NullableCreatePlaceDataAttributesPoint {
	return &NullableCreatePlaceDataAttributesPoint{value: val, isSet: true}
}

func (v NullableCreatePlaceDataAttributesPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePlaceDataAttributesPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


