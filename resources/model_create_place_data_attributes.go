/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// checks if the CreatePlaceDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePlaceDataAttributes{}

// CreatePlaceDataAttributes struct for CreatePlaceDataAttributes
type CreatePlaceDataAttributes struct {
	// city id
	CityId *string `json:"city_id,omitempty"`
	// distributor id
	DistributorId *string `json:"distributor_id,omitempty"`
	// place class
	Class *string `json:"class,omitempty"`
	// place ownership
	Ownership *string `json:"ownership,omitempty"`
	Point *CreatePlaceDataAttributesPoint `json:"point,omitempty"`
	// locale
	Locale *string `json:"locale,omitempty"`
	// place name
	Name *string `json:"name,omitempty"`
	// place address
	Address *string `json:"address,omitempty"`
	// place description
	Description *string `json:"description,omitempty"`
	// place website
	Website *string `json:"website,omitempty"`
	// place phone number
	Phone *string `json:"phone,omitempty"`
}

// NewCreatePlaceDataAttributes instantiates a new CreatePlaceDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePlaceDataAttributes() *CreatePlaceDataAttributes {
	this := CreatePlaceDataAttributes{}
	return &this
}

// NewCreatePlaceDataAttributesWithDefaults instantiates a new CreatePlaceDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePlaceDataAttributesWithDefaults() *CreatePlaceDataAttributes {
	this := CreatePlaceDataAttributes{}
	return &this
}

// GetCityId returns the CityId field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetCityId() string {
	if o == nil || IsNil(o.CityId) {
		var ret string
		return ret
	}
	return *o.CityId
}

// GetCityIdOk returns a tuple with the CityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetCityIdOk() (*string, bool) {
	if o == nil || IsNil(o.CityId) {
		return nil, false
	}
	return o.CityId, true
}

// HasCityId returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasCityId() bool {
	if o != nil && !IsNil(o.CityId) {
		return true
	}

	return false
}

// SetCityId gets a reference to the given string and assigns it to the CityId field.
func (o *CreatePlaceDataAttributes) SetCityId(v string) {
	o.CityId = &v
}

// GetDistributorId returns the DistributorId field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetDistributorId() string {
	if o == nil || IsNil(o.DistributorId) {
		var ret string
		return ret
	}
	return *o.DistributorId
}

// GetDistributorIdOk returns a tuple with the DistributorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetDistributorIdOk() (*string, bool) {
	if o == nil || IsNil(o.DistributorId) {
		return nil, false
	}
	return o.DistributorId, true
}

// HasDistributorId returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasDistributorId() bool {
	if o != nil && !IsNil(o.DistributorId) {
		return true
	}

	return false
}

// SetDistributorId gets a reference to the given string and assigns it to the DistributorId field.
func (o *CreatePlaceDataAttributes) SetDistributorId(v string) {
	o.DistributorId = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *CreatePlaceDataAttributes) SetClass(v string) {
	o.Class = &v
}

// GetOwnership returns the Ownership field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetOwnership() string {
	if o == nil || IsNil(o.Ownership) {
		var ret string
		return ret
	}
	return *o.Ownership
}

// GetOwnershipOk returns a tuple with the Ownership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetOwnershipOk() (*string, bool) {
	if o == nil || IsNil(o.Ownership) {
		return nil, false
	}
	return o.Ownership, true
}

// HasOwnership returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasOwnership() bool {
	if o != nil && !IsNil(o.Ownership) {
		return true
	}

	return false
}

// SetOwnership gets a reference to the given string and assigns it to the Ownership field.
func (o *CreatePlaceDataAttributes) SetOwnership(v string) {
	o.Ownership = &v
}

// GetPoint returns the Point field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetPoint() CreatePlaceDataAttributesPoint {
	if o == nil || IsNil(o.Point) {
		var ret CreatePlaceDataAttributesPoint
		return ret
	}
	return *o.Point
}

// GetPointOk returns a tuple with the Point field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetPointOk() (*CreatePlaceDataAttributesPoint, bool) {
	if o == nil || IsNil(o.Point) {
		return nil, false
	}
	return o.Point, true
}

// HasPoint returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasPoint() bool {
	if o != nil && !IsNil(o.Point) {
		return true
	}

	return false
}

// SetPoint gets a reference to the given CreatePlaceDataAttributesPoint and assigns it to the Point field.
func (o *CreatePlaceDataAttributes) SetPoint(v CreatePlaceDataAttributesPoint) {
	o.Point = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *CreatePlaceDataAttributes) SetLocale(v string) {
	o.Locale = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreatePlaceDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *CreatePlaceDataAttributes) SetAddress(v string) {
	o.Address = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreatePlaceDataAttributes) SetDescription(v string) {
	o.Description = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *CreatePlaceDataAttributes) SetWebsite(v string) {
	o.Website = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CreatePlaceDataAttributes) SetPhone(v string) {
	o.Phone = &v
}

func (o CreatePlaceDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePlaceDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CityId) {
		toSerialize["city_id"] = o.CityId
	}
	if !IsNil(o.DistributorId) {
		toSerialize["distributor_id"] = o.DistributorId
	}
	if !IsNil(o.Class) {
		toSerialize["class"] = o.Class
	}
	if !IsNil(o.Ownership) {
		toSerialize["ownership"] = o.Ownership
	}
	if !IsNil(o.Point) {
		toSerialize["point"] = o.Point
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	return toSerialize, nil
}

type NullableCreatePlaceDataAttributes struct {
	value *CreatePlaceDataAttributes
	isSet bool
}

func (v NullableCreatePlaceDataAttributes) Get() *CreatePlaceDataAttributes {
	return v.value
}

func (v *NullableCreatePlaceDataAttributes) Set(val *CreatePlaceDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePlaceDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePlaceDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePlaceDataAttributes(val *CreatePlaceDataAttributes) *NullableCreatePlaceDataAttributes {
	return &NullableCreatePlaceDataAttributes{value: val, isSet: true}
}

func (v NullableCreatePlaceDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePlaceDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


