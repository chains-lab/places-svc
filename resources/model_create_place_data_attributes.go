/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreatePlaceDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePlaceDataAttributes{}

// CreatePlaceDataAttributes struct for CreatePlaceDataAttributes
type CreatePlaceDataAttributes struct {
	// city id
	CityId string `json:"city_id"`
	// distributor id
	DistributorId *string `json:"distributor_id,omitempty"`
	// place class
	Class string `json:"class"`
	Point Point `json:"point"`
	// locale
	Locale string `json:"locale"`
	// place name
	Name string `json:"name"`
	// place description
	Description string `json:"description"`
	// place website
	Website *string `json:"website,omitempty"`
	// place phone number
	Phone *string `json:"phone,omitempty"`
}

type _CreatePlaceDataAttributes CreatePlaceDataAttributes

// NewCreatePlaceDataAttributes instantiates a new CreatePlaceDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePlaceDataAttributes(cityId string, class string, point Point, locale string, name string, description string) *CreatePlaceDataAttributes {
	this := CreatePlaceDataAttributes{}
	this.CityId = cityId
	this.Class = class
	this.Point = point
	this.Locale = locale
	this.Name = name
	this.Description = description
	return &this
}

// NewCreatePlaceDataAttributesWithDefaults instantiates a new CreatePlaceDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePlaceDataAttributesWithDefaults() *CreatePlaceDataAttributes {
	this := CreatePlaceDataAttributes{}
	return &this
}

// GetCityId returns the CityId field value
func (o *CreatePlaceDataAttributes) GetCityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CityId
}

// GetCityIdOk returns a tuple with the CityId field value
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetCityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CityId, true
}

// SetCityId sets field value
func (o *CreatePlaceDataAttributes) SetCityId(v string) {
	o.CityId = v
}

// GetDistributorId returns the DistributorId field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetDistributorId() string {
	if o == nil || IsNil(o.DistributorId) {
		var ret string
		return ret
	}
	return *o.DistributorId
}

// GetDistributorIdOk returns a tuple with the DistributorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetDistributorIdOk() (*string, bool) {
	if o == nil || IsNil(o.DistributorId) {
		return nil, false
	}
	return o.DistributorId, true
}

// HasDistributorId returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasDistributorId() bool {
	if o != nil && !IsNil(o.DistributorId) {
		return true
	}

	return false
}

// SetDistributorId gets a reference to the given string and assigns it to the DistributorId field.
func (o *CreatePlaceDataAttributes) SetDistributorId(v string) {
	o.DistributorId = &v
}

// GetClass returns the Class field value
func (o *CreatePlaceDataAttributes) GetClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *CreatePlaceDataAttributes) SetClass(v string) {
	o.Class = v
}

// GetPoint returns the Point field value
func (o *CreatePlaceDataAttributes) GetPoint() Point {
	if o == nil {
		var ret Point
		return ret
	}

	return o.Point
}

// GetPointOk returns a tuple with the Point field value
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetPointOk() (*Point, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Point, true
}

// SetPoint sets field value
func (o *CreatePlaceDataAttributes) SetPoint(v Point) {
	o.Point = v
}

// GetLocale returns the Locale field value
func (o *CreatePlaceDataAttributes) GetLocale() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetLocaleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locale, true
}

// SetLocale sets field value
func (o *CreatePlaceDataAttributes) SetLocale(v string) {
	o.Locale = v
}

// GetName returns the Name field value
func (o *CreatePlaceDataAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreatePlaceDataAttributes) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *CreatePlaceDataAttributes) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreatePlaceDataAttributes) SetDescription(v string) {
	o.Description = v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *CreatePlaceDataAttributes) SetWebsite(v string) {
	o.Website = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CreatePlaceDataAttributes) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaceDataAttributes) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CreatePlaceDataAttributes) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CreatePlaceDataAttributes) SetPhone(v string) {
	o.Phone = &v
}

func (o CreatePlaceDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePlaceDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["city_id"] = o.CityId
	if !IsNil(o.DistributorId) {
		toSerialize["distributor_id"] = o.DistributorId
	}
	toSerialize["class"] = o.Class
	toSerialize["point"] = o.Point
	toSerialize["locale"] = o.Locale
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	return toSerialize, nil
}

func (o *CreatePlaceDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"city_id",
		"class",
		"point",
		"locale",
		"name",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatePlaceDataAttributes := _CreatePlaceDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreatePlaceDataAttributes)

	if err != nil {
		return err
	}

	*o = CreatePlaceDataAttributes(varCreatePlaceDataAttributes)

	return err
}

type NullableCreatePlaceDataAttributes struct {
	value *CreatePlaceDataAttributes
	isSet bool
}

func (v NullableCreatePlaceDataAttributes) Get() *CreatePlaceDataAttributes {
	return v.value
}

func (v *NullableCreatePlaceDataAttributes) Set(val *CreatePlaceDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePlaceDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePlaceDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePlaceDataAttributes(val *CreatePlaceDataAttributes) *NullableCreatePlaceDataAttributes {
	return &NullableCreatePlaceDataAttributes{value: val, isSet: true}
}

func (v NullableCreatePlaceDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePlaceDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


