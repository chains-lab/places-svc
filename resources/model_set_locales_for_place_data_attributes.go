/*
Cifra SSO REST API

SSO REST API for Cifra domain

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetLocalesForPlaceDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetLocalesForPlaceDataAttributes{}

// SetLocalesForPlaceDataAttributes struct for SetLocalesForPlaceDataAttributes
type SetLocalesForPlaceDataAttributes struct {
	Locales []SetLocalesForPlaceDataAttributesLocalesInner `json:"locales"`
}

type _SetLocalesForPlaceDataAttributes SetLocalesForPlaceDataAttributes

// NewSetLocalesForPlaceDataAttributes instantiates a new SetLocalesForPlaceDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetLocalesForPlaceDataAttributes(locales []SetLocalesForPlaceDataAttributesLocalesInner) *SetLocalesForPlaceDataAttributes {
	this := SetLocalesForPlaceDataAttributes{}
	this.Locales = locales
	return &this
}

// NewSetLocalesForPlaceDataAttributesWithDefaults instantiates a new SetLocalesForPlaceDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetLocalesForPlaceDataAttributesWithDefaults() *SetLocalesForPlaceDataAttributes {
	this := SetLocalesForPlaceDataAttributes{}
	return &this
}

// GetLocales returns the Locales field value
func (o *SetLocalesForPlaceDataAttributes) GetLocales() []SetLocalesForPlaceDataAttributesLocalesInner {
	if o == nil {
		var ret []SetLocalesForPlaceDataAttributesLocalesInner
		return ret
	}

	return o.Locales
}

// GetLocalesOk returns a tuple with the Locales field value
// and a boolean to check if the value has been set.
func (o *SetLocalesForPlaceDataAttributes) GetLocalesOk() ([]SetLocalesForPlaceDataAttributesLocalesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locales, true
}

// SetLocales sets field value
func (o *SetLocalesForPlaceDataAttributes) SetLocales(v []SetLocalesForPlaceDataAttributesLocalesInner) {
	o.Locales = v
}

func (o SetLocalesForPlaceDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetLocalesForPlaceDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locales"] = o.Locales
	return toSerialize, nil
}

func (o *SetLocalesForPlaceDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locales",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetLocalesForPlaceDataAttributes := _SetLocalesForPlaceDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetLocalesForPlaceDataAttributes)

	if err != nil {
		return err
	}

	*o = SetLocalesForPlaceDataAttributes(varSetLocalesForPlaceDataAttributes)

	return err
}

type NullableSetLocalesForPlaceDataAttributes struct {
	value *SetLocalesForPlaceDataAttributes
	isSet bool
}

func (v NullableSetLocalesForPlaceDataAttributes) Get() *SetLocalesForPlaceDataAttributes {
	return v.value
}

func (v *NullableSetLocalesForPlaceDataAttributes) Set(val *SetLocalesForPlaceDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSetLocalesForPlaceDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSetLocalesForPlaceDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetLocalesForPlaceDataAttributes(val *SetLocalesForPlaceDataAttributes) *NullableSetLocalesForPlaceDataAttributes {
	return &NullableSetLocalesForPlaceDataAttributes{value: val, isSet: true}
}

func (v NullableSetLocalesForPlaceDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetLocalesForPlaceDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


