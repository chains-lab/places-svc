/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TimeMoment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeMoment{}

// TimeMoment struct for TimeMoment
type TimeMoment struct {
	// Day of the week.
	Weekday string `json:"weekday"`
	// Time of the day in 24-hour format (HH:MM).
	Time string `json:"time" validate:"regexp=^(?:[01]\\\\d|2[0-3]):[0-5]\\\\d$"`
}

type _TimeMoment TimeMoment

// NewTimeMoment instantiates a new TimeMoment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeMoment(weekday string, time string) *TimeMoment {
	this := TimeMoment{}
	this.Weekday = weekday
	this.Time = time
	return &this
}

// NewTimeMomentWithDefaults instantiates a new TimeMoment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeMomentWithDefaults() *TimeMoment {
	this := TimeMoment{}
	return &this
}

// GetWeekday returns the Weekday field value
func (o *TimeMoment) GetWeekday() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Weekday
}

// GetWeekdayOk returns a tuple with the Weekday field value
// and a boolean to check if the value has been set.
func (o *TimeMoment) GetWeekdayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Weekday, true
}

// SetWeekday sets field value
func (o *TimeMoment) SetWeekday(v string) {
	o.Weekday = v
}

// GetTime returns the Time field value
func (o *TimeMoment) GetTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *TimeMoment) GetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *TimeMoment) SetTime(v string) {
	o.Time = v
}

func (o TimeMoment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeMoment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["weekday"] = o.Weekday
	toSerialize["time"] = o.Time
	return toSerialize, nil
}

func (o *TimeMoment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"weekday",
		"time",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTimeMoment := _TimeMoment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTimeMoment)

	if err != nil {
		return err
	}

	*o = TimeMoment(varTimeMoment)

	return err
}

type NullableTimeMoment struct {
	value *TimeMoment
	isSet bool
}

func (v NullableTimeMoment) Get() *TimeMoment {
	return v.value
}

func (v *NullableTimeMoment) Set(val *TimeMoment) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeMoment) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeMoment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeMoment(val *TimeMoment) *NullableTimeMoment {
	return &NullableTimeMoment{value: val, isSet: true}
}

func (v NullableTimeMoment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeMoment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


