/*
Place Service API

API for managing places and their classes.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// checks if the UpdatePlaceDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePlaceDataAttributes{}

// UpdatePlaceDataAttributes struct for UpdatePlaceDataAttributes
type UpdatePlaceDataAttributes struct {
	// place class
	Class *string `json:"class,omitempty"`
	// place website
	Website *string `json:"website,omitempty"`
	// place phone number
	Phone *string `json:"phone,omitempty"`
}

// NewUpdatePlaceDataAttributes instantiates a new UpdatePlaceDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePlaceDataAttributes() *UpdatePlaceDataAttributes {
	this := UpdatePlaceDataAttributes{}
	return &this
}

// NewUpdatePlaceDataAttributesWithDefaults instantiates a new UpdatePlaceDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePlaceDataAttributesWithDefaults() *UpdatePlaceDataAttributes {
	this := UpdatePlaceDataAttributes{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *UpdatePlaceDataAttributes) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePlaceDataAttributes) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *UpdatePlaceDataAttributes) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *UpdatePlaceDataAttributes) SetClass(v string) {
	o.Class = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *UpdatePlaceDataAttributes) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePlaceDataAttributes) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *UpdatePlaceDataAttributes) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *UpdatePlaceDataAttributes) SetWebsite(v string) {
	o.Website = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *UpdatePlaceDataAttributes) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePlaceDataAttributes) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *UpdatePlaceDataAttributes) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *UpdatePlaceDataAttributes) SetPhone(v string) {
	o.Phone = &v
}

func (o UpdatePlaceDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePlaceDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["class"] = o.Class
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	return toSerialize, nil
}

type NullableUpdatePlaceDataAttributes struct {
	value *UpdatePlaceDataAttributes
	isSet bool
}

func (v NullableUpdatePlaceDataAttributes) Get() *UpdatePlaceDataAttributes {
	return v.value
}

func (v *NullableUpdatePlaceDataAttributes) Set(val *UpdatePlaceDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePlaceDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePlaceDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePlaceDataAttributes(val *UpdatePlaceDataAttributes) *NullableUpdatePlaceDataAttributes {
	return &NullableUpdatePlaceDataAttributes{value: val, isSet: true}
}

func (v NullableUpdatePlaceDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePlaceDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


