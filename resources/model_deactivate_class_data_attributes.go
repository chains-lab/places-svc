/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeactivateClassDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeactivateClassDataAttributes{}

// DeactivateClassDataAttributes struct for DeactivateClassDataAttributes
type DeactivateClassDataAttributes struct {
	// The class code that has replaced the deactivated class
	ReplacedClassCode string `json:"replaced_class_code"`
}

type _DeactivateClassDataAttributes DeactivateClassDataAttributes

// NewDeactivateClassDataAttributes instantiates a new DeactivateClassDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeactivateClassDataAttributes(replacedClassCode string) *DeactivateClassDataAttributes {
	this := DeactivateClassDataAttributes{}
	this.ReplacedClassCode = replacedClassCode
	return &this
}

// NewDeactivateClassDataAttributesWithDefaults instantiates a new DeactivateClassDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeactivateClassDataAttributesWithDefaults() *DeactivateClassDataAttributes {
	this := DeactivateClassDataAttributes{}
	return &this
}

// GetReplacedClassCode returns the ReplacedClassCode field value
func (o *DeactivateClassDataAttributes) GetReplacedClassCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplacedClassCode
}

// GetReplacedClassCodeOk returns a tuple with the ReplacedClassCode field value
// and a boolean to check if the value has been set.
func (o *DeactivateClassDataAttributes) GetReplacedClassCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplacedClassCode, true
}

// SetReplacedClassCode sets field value
func (o *DeactivateClassDataAttributes) SetReplacedClassCode(v string) {
	o.ReplacedClassCode = v
}

func (o DeactivateClassDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeactivateClassDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["replaced_class_code"] = o.ReplacedClassCode
	return toSerialize, nil
}

func (o *DeactivateClassDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"replaced_class_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeactivateClassDataAttributes := _DeactivateClassDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeactivateClassDataAttributes)

	if err != nil {
		return err
	}

	*o = DeactivateClassDataAttributes(varDeactivateClassDataAttributes)

	return err
}

type NullableDeactivateClassDataAttributes struct {
	value *DeactivateClassDataAttributes
	isSet bool
}

func (v NullableDeactivateClassDataAttributes) Get() *DeactivateClassDataAttributes {
	return v.value
}

func (v *NullableDeactivateClassDataAttributes) Set(val *DeactivateClassDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableDeactivateClassDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableDeactivateClassDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeactivateClassDataAttributes(val *DeactivateClassDataAttributes) *NullableDeactivateClassDataAttributes {
	return &NullableDeactivateClassDataAttributes{value: val, isSet: true}
}

func (v NullableDeactivateClassDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeactivateClassDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


