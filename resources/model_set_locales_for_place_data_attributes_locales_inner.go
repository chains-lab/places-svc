/*
Place Service API

API for managing places and their classes.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetLocalesForPlaceDataAttributesLocalesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetLocalesForPlaceDataAttributesLocalesInner{}

// SetLocalesForPlaceDataAttributesLocalesInner struct for SetLocalesForPlaceDataAttributesLocalesInner
type SetLocalesForPlaceDataAttributesLocalesInner struct {
	// Locale code (e.g. en, fr, de)
	Locale string `json:"locale"`
	// Locale name
	Name string `json:"name"`
	// Locale description
	Description string `json:"description"`
}

type _SetLocalesForPlaceDataAttributesLocalesInner SetLocalesForPlaceDataAttributesLocalesInner

// NewSetLocalesForPlaceDataAttributesLocalesInner instantiates a new SetLocalesForPlaceDataAttributesLocalesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetLocalesForPlaceDataAttributesLocalesInner(locale string, name string, description string) *SetLocalesForPlaceDataAttributesLocalesInner {
	this := SetLocalesForPlaceDataAttributesLocalesInner{}
	this.Locale = locale
	this.Name = name
	this.Description = description
	return &this
}

// NewSetLocalesForPlaceDataAttributesLocalesInnerWithDefaults instantiates a new SetLocalesForPlaceDataAttributesLocalesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetLocalesForPlaceDataAttributesLocalesInnerWithDefaults() *SetLocalesForPlaceDataAttributesLocalesInner {
	this := SetLocalesForPlaceDataAttributesLocalesInner{}
	return &this
}

// GetLocale returns the Locale field value
func (o *SetLocalesForPlaceDataAttributesLocalesInner) GetLocale() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value
// and a boolean to check if the value has been set.
func (o *SetLocalesForPlaceDataAttributesLocalesInner) GetLocaleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locale, true
}

// SetLocale sets field value
func (o *SetLocalesForPlaceDataAttributesLocalesInner) SetLocale(v string) {
	o.Locale = v
}

// GetName returns the Name field value
func (o *SetLocalesForPlaceDataAttributesLocalesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SetLocalesForPlaceDataAttributesLocalesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SetLocalesForPlaceDataAttributesLocalesInner) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *SetLocalesForPlaceDataAttributesLocalesInner) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SetLocalesForPlaceDataAttributesLocalesInner) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SetLocalesForPlaceDataAttributesLocalesInner) SetDescription(v string) {
	o.Description = v
}

func (o SetLocalesForPlaceDataAttributesLocalesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetLocalesForPlaceDataAttributesLocalesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locale"] = o.Locale
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	return toSerialize, nil
}

func (o *SetLocalesForPlaceDataAttributesLocalesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locale",
		"name",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetLocalesForPlaceDataAttributesLocalesInner := _SetLocalesForPlaceDataAttributesLocalesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetLocalesForPlaceDataAttributesLocalesInner)

	if err != nil {
		return err
	}

	*o = SetLocalesForPlaceDataAttributesLocalesInner(varSetLocalesForPlaceDataAttributesLocalesInner)

	return err
}

type NullableSetLocalesForPlaceDataAttributesLocalesInner struct {
	value *SetLocalesForPlaceDataAttributesLocalesInner
	isSet bool
}

func (v NullableSetLocalesForPlaceDataAttributesLocalesInner) Get() *SetLocalesForPlaceDataAttributesLocalesInner {
	return v.value
}

func (v *NullableSetLocalesForPlaceDataAttributesLocalesInner) Set(val *SetLocalesForPlaceDataAttributesLocalesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSetLocalesForPlaceDataAttributesLocalesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSetLocalesForPlaceDataAttributesLocalesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetLocalesForPlaceDataAttributesLocalesInner(val *SetLocalesForPlaceDataAttributesLocalesInner) *NullableSetLocalesForPlaceDataAttributesLocalesInner {
	return &NullableSetLocalesForPlaceDataAttributesLocalesInner{value: val, isSet: true}
}

func (v NullableSetLocalesForPlaceDataAttributesLocalesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetLocalesForPlaceDataAttributesLocalesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


